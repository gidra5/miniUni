import "std/string" as { split, replace, match, char_at, slice }

// https://adventofcode.com/2023/day/1

// take first and last digit on line, concat into two-digit number
// and sum all numbers in document
document := "
  1abc2\
  pqr3stu8vwx\
  a1b2c3d4e5f\
  treb7uchet\
"

lines := channel()

| {
  for line in split document "\n" {
    line = replace "\\s+" "" line
    if line != "": lines <- line
  }

  close lines
}

numbers := channel()
line_count := 0
line_handled_count := 0

| loop {
  status := ?<-numbers
  if status == :closed: break
  line = <-numbers
  line_count++

  | {
    first_digit := false
    last_digit := 0

    while line != "" {
      if match "\\d" (char_at line 0) {
        digit := number (char_at line 0)
        if !first_digit {
          numbers <- digit * 10
          first_digit = true
        }
        last_digit = digit
      }

      line = slice(line, 1)
    }

    numbers <- last_digit
    line_handled_count++

    if line_count == line_handled_count: close numbers
  }
}

sum := 0

loop {
  status := ?<-numbers
  if status == :closed: break
  sum += <-numbers
}

sum
